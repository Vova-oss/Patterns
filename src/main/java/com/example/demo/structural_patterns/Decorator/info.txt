Шаблон:

Декоратор (Decorator)
========================================================================================================================

Цель:

Динамическое добавление новых обязанностей объекту.
========================================================================================================================

Использование:

Используется в качестве альтернативы порождению подклассов для расширения функциональности.
========================================================================================================================

Понимание:

Мы над классом(JavaDeveloper) хотим создать декоратор, при чём этот класс имплементирует интерфейс(Developer). Тогда
создаём класс(DeveloperDecorator) и также имплементируем общий интерфейс(Developer). Внутри добавляем экземпляр
интерфейса и вызываем метод как у экземпляра, добавляя некоторую надстройку. В нашем случае мы создали ещё 2 дочерних
класса(SeniorJavaDeveloper и TeamLeader), где и реализовывали надстройку над методом.